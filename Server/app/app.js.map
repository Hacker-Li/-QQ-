{"version":3,"sources":["../src/app.js"],"names":["route","require","app","Koa","bodyparser","use","path","join","__dirname","pathPrefix","extension","template","ctx","next","start","Date","ms","console","log","method","url","status","render","on","err","port","parseInt","config","server","http","createServer","callback","listen","error","syscall","code","process","exit"],"mappings":"uSAAA,4B;AACA,0B;AACA,4B;AACA,qC;AACA,yC;AACA,mC;AACA,+C;AACA,uC;AACA,gD;AACA,yC;AACA,kC;AACA,IAAMA,QAAQC,QAAQ,gBAAR,CAAd;AACA,IAAMC,MAAM,IAAIC,aAAJ,EAAZ;AACA,IAAMC,aAAa,8BAAnB;;AAEA;AACAF,IAAIG,GAAJ,CAAQ,0BAAQD,UAAR,CAAR;AACAF,IAAIG,GAAJ,CAAQ,0BAAQ,wBAAR,CAAR;AACAH,IAAIG,GAAJ,CAAQ,0BAAQ,0BAAR,CAAR;;AAEA;AACAH,IAAIG,GAAJ,CAAQ,0BAAQ,6BAAUC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAV,EAA6C;AAC3DC,cAAY,EAD+C,EAA7C,CAAR,CAAR;;;AAIA;AACAP,IAAIG,GAAJ,CAAQ,wBAAMC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAN,EAAwC;AAC9CE,aAAW,KADmC,EAAxC,CAAR;;;AAIA;AACA,0BAAWR,GAAX,EAAgB;AACdS,YAAU,eADI,EAAhB;;;AAIA;AACAT,IAAIG,GAAJ,kGAAQ,iBAAOO,GAAP,EAAYC,IAAZ;AACAC,iBADA,GACQ,IAAIC,IAAJ,EADR;AAEAF,oBAFA;AAGAG,cAHA,GAGK,IAAID,IAAJ,KAAaD,KAHlB;AAING,oBAAQC,GAAR,CAAeN,IAAIO,MAAnB,SAA6BP,IAAIQ,GAAjC,WAA0CJ,EAA1C,SAJM,mEAAR;;;AAOA;AACA;AACA;AACA;;AAEAd,IAAIG,GAAJ,CAAQL,KAAR;AACA;AACAE,IAAIG,GAAJ,mGAAQ,kBAAOO,GAAP;AACNA,gBAAIS,MAAJ,GAAa,GAAb,CADM;AAEAT,kBAAIU,MAAJ,CAAW,KAAX,CAFA,uEAAR;;;AAKA;AACApB,IAAIqB,EAAJ,CAAO,OAAP,oGAAgB,kBAAOC,GAAP,EAAYZ,GAAZ;AACdK,oBAAQC,GAAR,CAAY,gBAAZ,EAA8BM,GAA9B,EADc,qEAAhB;;;AAIA,IAAMC,OAAOC,SAASC,iBAAOF,IAAP,IAAe,MAAxB,CAAb;AACA,IAAMG,SAASC,eAAKC,YAAL,CAAkB5B,IAAI6B,QAAJ,EAAlB,CAAf;;AAEAH,OAAOI,MAAP,CAAcP,IAAd;AACAG,OAAOL,EAAP,CAAU,OAAV,EAAmB,UAACU,KAAD,EAAW;AAC5B,MAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAMD,KAAN;AACD;AACD;AACA,UAAQA,MAAME,IAAd;AACE,SAAK,QAAL;AACElB,cAAQgB,KAAR,CAAcR,OAAO,+BAArB;AACAW,cAAQC,IAAR,CAAa,CAAb;AACA;AACF,SAAK,YAAL;AACEpB,cAAQgB,KAAR,CAAcR,OAAO,oBAArB;AACAW,cAAQC,IAAR,CAAa,CAAb;AACA;AACF;AACE,YAAMJ,KAAN,CAVJ;;AAYD,CAjBD;AAkBAL,OAAOL,EAAP,CAAU,WAAV,EAAuB,YAAM;AAC3BN,UAAQC,GAAR,CAAY,uBAAZ,EAAqCO,IAArC;AACD,CAFD,E;;AAIevB,G","file":"app.js","sourcesContent":["import http from 'http'\r\nimport Koa from 'koa'\r\nimport path from 'path'\r\nimport views from 'koa-views'\r\nimport convert from 'koa-convert'\r\nimport json from 'koa-json'\r\nimport Bodyparser from 'koa-bodyparser'\r\nimport logger from 'koa-logger'\r\nimport koaStatic from 'koa-static-plus'\r\nimport koaOnError from 'koa-onerror'\r\nimport config from './config'\r\nconst route = require('./routes/index');\r\nconst app = new Koa()\r\nconst bodyparser = Bodyparser()\r\n\r\n// middlewares\r\napp.use(convert(bodyparser))\r\napp.use(convert(json()))\r\napp.use(convert(logger()))\r\n\r\n// static\r\napp.use(convert(koaStatic(path.join(__dirname, '../public'), {\r\n  pathPrefix: ''\r\n})))\r\n\r\n// views\r\napp.use(views(path.join(__dirname, '../views'), {\r\n  extension: 'ejs'\r\n}))\r\n\r\n// 500 error\r\nkoaOnError(app, {\r\n  template: 'views/500.ejs'\r\n})\r\n\r\n// logger\r\napp.use(async (ctx, next) => {\r\n  const start = new Date()\r\n  await next()\r\n  const ms = new Date() - start\r\n  console.log(`${ctx.method} ${ctx.url} - ${ms}ms`)\r\n})\r\n\r\n// response router\r\n// app.use(async (ctx, next) => {\r\n//   await require('./routes').routes()(ctx, next)\r\n// })\r\n\r\napp.use(route)\r\n// 404\r\napp.use(async (ctx) => {\r\n  ctx.status = 404\r\n  await ctx.render('404')\r\n})\r\n\r\n// error logger\r\napp.on('error', async (err, ctx) => {\r\n  console.log('error occured:', err)\r\n})\r\n\r\nconst port = parseInt(config.port || '3000')\r\nconst server = http.createServer(app.callback())\r\n\r\nserver.listen(port)\r\nserver.on('error', (error) => {\r\n  if (error.syscall !== 'listen') {\r\n    throw error\r\n  }\r\n  // handle specific listen errors with friendly messages\r\n  switch (error.code) {\r\n    case 'EACCES':\r\n      console.error(port + ' requires elevated privileges')\r\n      process.exit(1)\r\n      break\r\n    case 'EADDRINUSE':\r\n      console.error(port + ' is already in use')\r\n      process.exit(1)\r\n      break\r\n    default:\r\n      throw error\r\n  }\r\n})\r\nserver.on('listening', () => {\r\n  console.log('Listening on port: %d', port)\r\n})\r\n\r\nexport default app\r\n"]}